parameters:
  - name: env
    type: string
  - name: terraformAction
    default: plan
    values: 
      - plan
      - apply
      - destroy
  - name: tfDependsOn
    type: string
  - name: components
    type: object
    default:
      - rg
      - vnet
      - kv

stages:
  - stage: ${{ parameters.terraformAction }}_${{ parameters.env }}
    displayName: "${{ parameters.terraformAction }} ${{ parameters.env }}"
    dependsOn: ${{ parameters.tfDependsOn }}
    jobs:
      - ${{ each component in parameters.components }}:
        - job: TF${{ parameters.terraformAction }}_${{ parameters.env }}_${{ component }}
          ${{ if ne('${{ component }}', 'rg') }}:
            dependsOn: 'TF${{ parameters.terraformAction }}_${{ parameters.env }}_rg'
          ${{ if eq('${{ component }}', 'rg') }}:
            dependsOn: []
          variables:
            - name: timeoutInMinutes
              value: 60
            - name: agentPool
              value: ubuntu-18.04
            - name: build
              value: $(Build.BuildNumber)
            - name: product
              value: cft-platform
            - name: terraformInitSubscription
              value: 04d27a32-7a07-48b3-95b8-3c8691e1a263
            - template: vars/input-variables.yaml@cnp-azuredevops-libraries
          pool:
            vmImage: ${{ variables.agentPool }}
          timeoutInMinutes: ${{ variables.timeoutInMinutes }}
          steps:
          - template: steps/terraform.yaml@cnp-azuredevops-libraries
            parameters:
              overrideAction: ${{ parameters.terraformAction }}
              environment: ${{ parameters.env }}
              component: ${{ component }}
              serviceConnection: 'DTS-SHAREDSERVICES-${{ upper(parameters.env) }}'
              terraformInitSubscription: ${{ variables.terraformInitSubscription }}
              product: ${{ variables.product }}
 