# Docs:
# https://aka.ms/yaml

trigger: none
  #batch: true
  #branches:
  #  include:
  #  - master
  #paths:
  #  exclude:
  #  - /modules/azure-landing-zone/*
  #  - /components/global/*

resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: refs/heads/master
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts'

variables:
  - name: timeoutInMinutes
    value: 60
  - name: agentPool
    value: ubuntu-18.04
  - name: build
    value: $(Build.BuildNumber)
  - name: product
    value: cft-platform
  - name: terraformInitSubscription
    value: 04d27a32-7a07-48b3-95b8-3c8691e1a263
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

parameters:
  - name: environments
    type: object
    default:
      - name: stg
      - name: dev
      - name: test
      - name: stg
      - name: prod

stages:
  - stage: Precheck
    jobs:
      - job:
        pool:
          vmImage: ${{ variables.agentPool }}
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-token'
              serviceConnection: 'DCD-CFT-Sandbox'


  - ${{ each environment in parameters.environments }}:
    - template: pipeline/stages/tf-action.yaml
      parameters: 
        env: ${{ environment.name }}
        terraformAction: plan
        ${{ if eq('${{ environment.name }}', 'sbox') }}:
          tfDependsOn: Precheck
        ${{ if eq('${{ environment.name }}', 'dev') }}:
          tfDependsOn: apply_sbox
        ${{ if eq('${{ environment.name }}', 'test') }}:
          tfDependsOn: apply_dev
        ${{ if eq('${{ environment.name }}', 'stg') }}:
          tfDependsOn: apply_test
        ${{ if eq('${{ environment.name }}', 'prod') }}:
          tfDependsOn: apply_stg

    - ${{ if ne('${{ environment.name }}', 'sbox') }}:
      - template: pipeline/stages/wait.yaml
        parameters: 
          env: ${{ environment.name }}
          dependsOn: 'plan_${{ environment.name }}'

    - template: pipeline/stages/tf-action.yaml
      parameters: 
        env: environment
        terraformAction: apply
        ${{ if eq('${{ environment.name }}', 'sbox') }}:
          tfDependsOn: plan_${{ environment.name }}
        ${{ if ne('${{ environment.name }}', 'sbox') }}:
          tfDependsOn: wait_${{ environment.name }}

