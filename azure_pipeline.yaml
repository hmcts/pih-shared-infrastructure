# Docs:
# https://aka.ms/yaml

trigger: none
  #batch: true
  #branches:
  #  include:
  #  - master
  #paths:
  #  exclude:
  #  - /modules/azure-landing-zone/*
  #  - /components/global/*

resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: refs/heads/dtspo-3305
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts'

variables:
  - name: timeoutInMinutes
    value: 60
  - name: agentPool
    value: ubuntu-18.04
  - name: build
    value: $(Build.BuildNumber)
  - name: product
    value: cft-platform
  - name: terraformInitSubscription
    value: 04d27a32-7a07-48b3-95b8-3c8691e1a263
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

parameters:
  - name: overrideAction
    type: string
    default: plan
    values:
    - plan
    - apply
    - destroy

  - name: environment_components
    type: object
    default:
    - deployment: 'sbox_rg'
      environment: 'sbox'
      component: 'rg'
      service_connection: 'DTS-SHAREDSERVICES-SBOX'
      storage_account_name: pip-devops-sbox-sa
      dependsOn: 'Precheck'

    - deployment: 'sbox_kv'
      environment: 'sbox'
      component: 'kv'
      service_connection: 'DTS-SHAREDSERVICES-SBOX'
      storage_account_name: pip-devops-sbox-sa
      dependsOn: 'sbox_rg'

    - deployment: 'test_rg'
      environment: 'test'
      component: 'rg'
      service_connection: 'DTS-SHAREDSERVICES-TEST'
      storage_account_name: "pip-devops-test-sa"
      dependsOn: 'Precheck'

    - deployment: 'test_kv'
      environment: 'test'
      component: 'kv'
      service_connection: 'DTS-SHAREDSERVICES-TEST'
      storage_account_name: pip-devops-test-sa
      dependsOn: 'test_rg'

    - deployment: 'dev_rg'
      environment: 'dev'
      component: 'rg'
      service_connection: "DTS-SHAREDSERVICES-DEV"
      storage_account_name: "pip-devops-dev-sa"
      
      dependsOn: 'Precheck'

    # - deployment: 'sbox_apim'
    #   environment: 'sbox'
    #   component: 'apim'
    #   service_connection: 'DTS-SHAREDSERVICES-SBOX'
    #   storage_account_name: pip-devops-sbox-sa
    #   dependsOn: 'sbox_rg'

    # - deployment: 'test_apim'
    #   environment: 'test'
    #   component: 'apim'
    #   service_connection: 'DTS-SHAREDSERVICES-TEST'
    #   storage_account_name: "pip-devops-test-sa"

    #   dependsOn: 'test_rg'

    # - deployment: 'dev_apim'
    #   environment: 'dev'
    #   component: 'apim'
    #   service_connection: "DTS-SHAREDSERVICES-DEV"
    #   storage_account_name: "pip-devops-dev-sa"
      
      # dependsOn: 'dev_rg'

    - deployment: 'sbox_vnet'
      environment: 'sbox'
      component: 'vnet'
      service_connection: "DTS-SHAREDSERVICES-DEV"
      storage_account_name: "pip-devops-dev-sa"
      
      dependsOn: 'sbox_kv'
    
    - deployment: 'test_vnet'
      environment: 'test'
      component: 'vnet'
      service_connection: "DTS-SHAREDSERVICES-TEST"
      storage_account_name: "pip-devops-test-sa"
      
      dependsOn: 'test_kv'

    - deployment: 'dev_vnet'
      environment: 'dev'
      component: 'vnet'
      service_connection: "DTS-SHAREDSERVICES-dev"
      storage_account_name: "pip-devops-dev-sa"
      



stages:
  - stage: Precheck
    jobs:
      - job:
        pool:
          vmImage: ${{ variables.agentPool }}
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-token'
              serviceConnection: 'DCD-CFT-Sandbox'


  - ${{ each deployment in parameters.environment_components }}:
    - stage: ${{ deployment.deployment }}
      dependsOn: ${{ deployment.dependsOn }}
      jobs:
        - job: TerraformPlanApply
          pool:
            vmImage: ${{ variables.agentPool }}
          timeoutInMinutes: ${{ variables.timeoutInMinutes }}
          steps:
          - template: steps/terraform.yaml@cnp-azuredevops-libraries
            parameters:
              overrideAction: ${{ parameters.overrideAction }}
              environment: ${{ deployment.environment }}
              component: ${{ deployment.component }}
              serviceConnection: ${{ deployment.service_connection }}
              terraformInitSubscription: ${{ variables.terraformInitSubscription }}
              product: ${{ variables.product }}
